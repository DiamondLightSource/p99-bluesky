on:
  workflow_call:

jobs:
  build:
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Need this to get version number from last tag
          fetch-depth: 0

      - name: Build sdist and wheel
        run: >
          export SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct) &&
          pipx run build

      - name: Upload sdist and wheel as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

      - name: Check for packaging errors
        run: pipx run twine check --strict dist/*
      #Load caches if match
      - name: Restore cached virtualenv
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          key: venv-${{ runner.os }}-${{ inputs.python-version }}-${{ inputs.workflow-name }}-${{ hashFiles(inputs.pip-install) }}
          path: .venv      
      - name: Install produced wheel
        uses: ./.github/actions/install_requirements
        with:
          pip-install: dist/*.whl
          workflow-name: dist
          token: secrets.GITHUB_TOKEN

      - name: Test module --version works using the installed wheel
        # If more than one module in src/ replace with module name to test
        run: python -m $(ls --hide='*.egg-info' src | head -1) --version
      - name: Delete Previous Cache
        if: ${{ steps.cache-restore.outputs.cache-hit }}
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "venv-${{ runner.os }}-${{ inputs.python-version }}-${{ inputs.workflow-name }}-${{ hashFiles(inputs.pip-install) }}" --confirm
        env:
          GITHUB_TOKEN: secrets.GITHUB_TOKEN
        shell: bash
  
      - name: Saved cached virtualenv
        uses: actions/cache/save@v4
        with:
          key: venv-${{ runner.os }}-${{ inputs.python-version }}-${{inputs.workflow-name}}-${{ hashFiles(inputs.pip-install) }}
          path: .venv